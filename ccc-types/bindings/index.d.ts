/* tslint:disable */

/* WARNING: This file is automatically generated */
/* DO NOT CHANGE IT MANUALLY */

export type BonAppCafeResponse = {
  name: string;
  address: string;
  city: string;
  state: string;
  zip: string;
  latitude: string;
  longitude: string;
  description: string;
  message: string;
  eod: string;
  timezone: string;
  menu_type: string;
  menu_html: string;
  location_detail: string;
  weekly_schedule: string;
  days: Array<BonAppDay>;
  cor_icons: CorIcons;
};

export type BonAppCafesResponse = { cafes: Record<string, BonAppCafeResponse> };

export type BonAppCorIcon = {
  sort: any;
  label: string;
  description: string;
  image: string;
  is_filter: YesNo;
  allergen: bigint;
};

export type BonAppDay = {
  date: string;
  dayparts: Array<BonAppDaypart>;
  status: string;
  message: string;
};

export type BonAppDaypart = {
  id: string;
  starttime: string;
  endtime: string;
  message: string | null;
  label: string;
  hide: string;
};

export type BreakSchedule = {
  fall: Array<Schedule>;
  thanksgiving: Array<Schedule>;
  winter: Array<Schedule>;
  interim: Array<Schedule>;
  spring: Array<Schedule>;
  easter: Array<Schedule>;
  summer: Array<Schedule>;
};

export type BusTimesResponse = { data: Array<BusTimesResponseItem> };

export type BusTimesResponseItem = {
  colors: TransitColors;
  line: string;
  notice: string | null;
  schedules: Array<TransitSchedule>;
};

export type ColorPrintersResponse = { data: ColorPrintersResponseItem };

export type ColorPrintersResponseItem = { colorPrinters: Array<string> };

export type Connector = string;

export type ContactResponse = { data: Array<ContactResponseItem> };

export type ContactResponseItem = {
  title: string;
  phoneNumber: string | null;
  buttonText: string | null;
  category: string;
  image?: string;
  synopsis: string;
  text: string;
};

export type CorIcons = Record<string, BonAppCorIcon>;

export type CurrencyString = string;

export type DayOfWeek = "Mo" | "Tu" | "We" | "Th" | "Fr" | "Sa" | "Su";

export type DictionaryResponse = { data: Array<DictionaryResponseItem> };

export type DictionaryResponseItem = { word: string; definition: string };

export type FAQResponse = { text: string };

export type FoodItemResponse = {
  label: string;
  station: string;
  description?: string;
  special?: boolean;
};

export type FoodStationMenu = { label: string; note?: string };

export type HelpButton = { title: string; action: string; params: HelpParams };

export type HelpParams = {
  url?: string;
  number?: string;
  to?: string;
  subject?: string;
  body?: string;
};

export type HelpResponse = { data: Array<HelpResponseItem> };

export type HelpResponseItem = {
  key: string;
  enabled: boolean;
  hidden: boolean;
  title: string;
  body: string;
  buttons: Array<HelpButton>;
};

export type Hour = { days: Array<DayOfWeek>; from: string; to: string };

export type HoursItem = {
  name: string;
  image?: string;
  category: string;
  schedule: Array<BreakSchedule>;
  breakSchedule: BreakSchedule;
  subtitle?: string;
};

export type HoursResponse = { data: Array<HoursItem> };

export type HtmlString = string;

export type ItemNutritionDetails = {
  calories?: NutritionDetail;
  servingSize?: NutritionDetail;
  fatContent?: NutritionDetail;
  saturatedFatContent?: NutritionDetail;
  transFatContent?: NutritionDetail;
  cholesterolContent?: NutritionDetail;
  sodiumContent?: NutritionDetail;
  carbohydrateContent?: NutritionDetail;
  fiberContent?: NutritionDetail;
  sugarContent?: NutritionDetail;
  proteinContent?: NutritionDetail;
};

export type ModesItem = {
  name: string;
  category: string;
  description: string;
  synopsis: string;
  url: string;
};

export type ModesResponse = { data: Array<ModesItem> };

export type Monotony = {
  id: string;
  name: string;
  short_name?: string;
  image: string;
};

export type MonotonyContainer = Monotony;

export type NumericString = string;

export type Nutrition = {
  kcal: NumericString;
  well_being: string;
  well_being_image: string;
};

export type NutritionContainer = Nutrition;

export type NutritionDetail = { label: string; value: number; unit: string };

export type NutritionDetailContainer = ItemNutritionDetails;

export type NutritionDetailType = NutritionDetail;

export type PauseMenuItemResponse = {
  stationMenus: Array<FoodStationMenu>;
  foodItems: Array<FoodItemResponse>;
  corIcons: Record<string, BonAppCorIcon>;
};

export type PauseMenuResponse = { data: PauseMenuItemResponse };

export type Schedule = {
  title: string;
  notes?: string;
  hours: Array<Hour>;
  closedForChapelTime: boolean | null;
  isPhysicallyOpen: boolean | null;
};

export type TransitColors = { bar: string; dot: string };

export type TransitSchedule = {
  days: Array<string>;
  coordinates: Record<string, [number, number]>;
  stops: Array<string>;
  times: Array<Array<string | boolean>>;
};

export type WebcamsResponse = { data: Array<WebcamsResponseItem> };

export type WebcamsResponseItem = {
  name: string;
  pageUrl: string;
  streamUrl: string;
  thumbnail: string;
  thumbnailUrl?: string;
  tagline: string;
  accentColor: [bigint, bigint, bigint];
  textColor: string;
};

export type YesNo = "N" | "Y";
